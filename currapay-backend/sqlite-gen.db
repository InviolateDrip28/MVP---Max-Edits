# This generates the sqlite database for testing

import sqlite3
from faker import Faker

# Initialize Faker for generating fake data
fake = Faker()

# Connect to SQLite database (creates the file if it doesn't exist)
conn = sqlite3.connect('test1.db')
cursor = conn.cursor()

# Create Users Table
cursor.execute('''
CREATE TABLE IF NOT EXISTS Users (
    UserID INTEGER PRIMARY KEY AUTOINCREMENT,
    EmailAddress TEXT NOT NULL,
    Location TEXT NOT NULL,
    Demographics TEXT NOT NULL,
    DeviceUsed TEXT NOT NULL,
    InternetAccess TEXT NOT NULL,
    MobilePenetration TEXT NOT NULL,
    AccountCreationDate TEXT NOT NULL
);
''')

# Create Transactions Table
cursor.execute('''
CREATE TABLE IF NOT EXISTS Transactions (
    TransactionID INTEGER PRIMARY KEY AUTOINCREMENT,
    UserID INTEGER,
    Amount REAL NOT NULL,
    Currency TEXT NOT NULL,
    ExchangeRate REAL NOT NULL,
    Fees REAL NOT NULL,
    ProcessingTime TEXT NOT NULL,
    TransferMethod TEXT NOT NULL,
    PurposeOfTransfer TEXT NOT NULL,
    Status TEXT NOT NULL,
    Timestamp TEXT NOT NULL,
    FOREIGN KEY (UserID) REFERENCES Users (UserID)
);
''')

# Insert fake data into Users Table
for _ in range(10):  # Adjust the range for more data
    email = fake.email()
    location = f"{fake.country()}, {fake.city()}"
    demographics = f"{fake.random_int(18, 99)}, {fake.random_element(['Male', 'Female'])}, {fake.job()}, {fake.country()}"
    device_used = fake.word()
    internet_access = fake.word()
    mobile_penetration = fake.word()
    account_creation_date = fake.date_this_decade()

    cursor.execute('''
    INSERT INTO Users (EmailAddress, Location, Demographics, DeviceUsed, InternetAccess, MobilePenetration, AccountCreationDate)
    VALUES (?, ?, ?, ?, ?, ?, ?)
    ''', (email, location, demographics, device_used, internet_access, mobile_penetration, account_creation_date))

# Insert fake data into Transactions Table
for _ in range(10):  # Adjust the range for more data
    user_id = fake.random_int(1, 10)  # Assuming we have 10 users
    amount = fake.random_number(digits=3)
    currency = fake.currency_code()
    exchange_rate = fake.random_number(digits=2)
    fees = fake.random_number(digits=2)
    processing_time = fake.time()
    transfer_method = fake.word()
    purpose_of_transfer = fake.word()
    status = fake.random_element(['Completed', 'Pending', 'Failed'])
    timestamp = fake.date_time_this_year().isoformat()

    cursor.execute('''
    INSERT INTO Transactions (UserID, Amount, Currency, ExchangeRate, Fees, ProcessingTime, TransferMethod, PurposeOfTransfer, Status, Timestamp)
    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    ''', (user_id, amount, currency, exchange_rate, fees, processing_time, transfer_method, purpose_of_transfer, status, timestamp))

# Commit changes and close connection
conn.commit()
conn.close()
